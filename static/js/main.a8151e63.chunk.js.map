{"version":3,"sources":["lib/useProfile.js","components/SelectDropdown.js","components/GoogleFontLink.js","components/Themes.js","components/Inputs.js","lib/generateCSS.js","components/HamburgerMenu.js","components/Preview.js","components/OutputCSS.js","components/SocialSharing.js","components/App.js","serviceWorker.js","index.js"],"names":["profile","React","useState","themes","handleChange","onChange","event","newEvent","Object","assign","target","value","props","options","otherProps","optionTags","key","map","option","index","id","newOption","name","undefined","data-key","bind","family","rel","href","setProfile","onSelectTheme","useCallback","theme","ThemeButton","title","description","onClick","GoogleFontLink","headlineFont","textFont","styled","button","actionColor","backgroundColor","headlineWeight","headlineItalic","headlineUppercase","allFonts","googleFonts","items","sort","a","b","category","item","replace","selectedFonts","includes","fontWeights","inputCategories","fields","type","SmartInput","SelectDropdown","style","width","fieldName","newValue","prototype","hasOwnProperty","call","checked","DivLeft","Themes","field","div","trimCode","str","rootClass","fixedProfile","headerColor","textColor","sourceInfo","textSize","textWeight","headlineColor","warningColor","informationColor","HamburgerSVG","color","version","xmlns","xmlnsXlink","x","y","height","viewBox","fill","xmlSpace","HamburgerWrapper","PreviewBox","className","HamburgerMenu","placeholder","generateCSS","outputElement","useRef","OutputTextBox","ref","current","select","readOnly","textarea","SocialSharingSet","link","body","styles","TwitterShareButton","url","TwitterIcon","round","size","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","subject","EmailIcon","SocialSharingBox","cursor","display","marginLeft","App","savedProfile","getSessionValue","useHash","useProfile","setProfileAndSession","setSessionValue","updateQuery","SocialSharing","packageJson","Inputs","Preview","OutputCSS","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8151e63.chunk.js","sourcesContent":["import React from 'react'\n\nimport themes from '../config/themes.json'\n\nexport default (profile) => React.useState(profile || themes[0].profile)\n","import React from 'react'\n\nconst handleChange = (onChange, event) => {\n  const newEvent = Object.assign({}, event, { target: { value: (event.target.value === 'null') ? null : event.target.value } })\n  if (onChange) onChange(newEvent)\n}\n\nexport default (props) => {\n  const { options, onChange, ...otherProps } = props\n  const optionTags = [\n    <option key='null' value=''>(none)</option>,\n    ...props.options.map((option, index) => {\n      const value = (typeof (option) === 'object' && (option.value || option.id))\n        ? option.value || option.id\n        : option\n      const newOption = {\n        value,\n        name: (typeof (option) === 'object' && option.name) ? option.name : option,\n        key: (option.key !== undefined)\n          ? option.key\n          : (value !== undefined)\n            ? value\n            : index\n      }\n      return <option key={newOption.key} data-key={newOption.key} value={newOption.value}>{newOption.name}</option>\n    })\n  ]\n  return (\n    <select {...otherProps} onChange={handleChange.bind(undefined, props.onChange)}>\n      {optionTags}\n    </select>\n  )\n}\n","import React from 'react'\n\nexport default ({ family }) => <link rel='stylesheet' href={`https://fonts.googleapis.com/css?family=${family}:100,300,400,500,600,700,800,900,100italic,300italic,400italic,500italic,600italic,700italic,800italic,900italic&display=swap`} />\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport GoogleFontLink from './GoogleFontLink'\nimport themes from '../config/themes.json'\n\nexport default ({ setProfile }) => {\n  const onSelectTheme = useCallback(index => {\n    setProfile(themes[index].profile)\n  }, [setProfile])\n\n  return (\n    <div>\n      <h2>Themes</h2>\n      <div>\n        {themes.map((theme, index) => (\n          <ThemeButton key={theme.name} title={theme.description} onClick={event => onSelectTheme(index)} {...theme.profile}>\n            {theme.name}\n            <GoogleFontLink family={theme.profile.headlineFont || theme.profile.textFont} />\n          </ThemeButton>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst ThemeButton = styled.button`\n  margin: 0 0.8em 0.8em 0;\n  padding: 0;\n  border-radius: 0.2em;\n  border: none;\n  display: inline-block;\n  cursor: pointer;\n  user-select: none;\n  outline: none;\n  font-size: 1em;\n  width: 5em;\n  height: 5em;\n  border: 2px solid transparent;\n  overflow: hidden;\n  background-color: ${profile => profile.actionColor};\n  color: ${profile => profile.backgroundColor};\n  font-family: ${profile => profile.headlineFont || profile.textFont};\n  font-weight: ${profile => profile.headlineWeight};\n  ${profile => profile.headlineItalic ? 'font-style: italic;' : ''}\n  ${profile => profile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n\n  &:hover {\n    border: 2px solid rgba(0,0,0, 0.4);\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport SelectDropdown from './SelectDropdown'\nimport GoogleFontLink from './GoogleFontLink'\nimport Themes from './Themes'\nimport googleFonts from '../config/googleFonts'\nimport selectedFonts from '../config/selectedFonts'\n\nconst shortFontCategory = category => category.replace('-serif', '').replace('monospace', 'mono')\n\nconst allFonts = googleFonts.items.sort((a, b) => (a.category > b.category) ? 1 : ((b.category > a.category) ? -1 : 0)).map(item => ({\n  name: `${item.family} (${shortFontCategory(item.category)})${selectedFonts.includes(item.family) ? ' 🔵' : ''}`,\n  value: item.family\n}))\n\nconst fontWeights = [\n  { name: 'Thin (100)', value: 100 },\n  { name: 'Light (300)', value: 300 },\n  { name: 'Regular (400)', value: 'normal' },\n  { name: 'Medium (500)', value: 500 },\n  { name: 'Semi-Bold (600)', value: 600 },\n  { name: 'Bold (700)', value: 'bold' },\n  { name: 'Extra-Bold (800)', value: 800 },\n  { name: 'Black (900)', value: 900 }\n]\n\nconst inputCategories = [\n  {\n    title: 'Colors',\n    fields: [\n      {\n        name: 'backgroundColor',\n        title: 'Background',\n        type: 'color'\n      },\n      {\n        name: 'actionColor',\n        title: 'Action/Primary',\n        type: 'color'\n      },\n      {\n        name: 'headerColor',\n        title: 'Header/Secondary',\n        type: 'color'\n      },\n      {\n        name: 'textColor',\n        title: 'Text',\n        type: 'color'\n      },\n      {\n        name: 'headlineColor',\n        title: 'Headlines',\n        type: 'color'\n      },\n      {\n        name: 'warningColor',\n        title: 'Warning',\n        type: 'color'\n      },\n      {\n        name: 'informationColor',\n        title: 'Information',\n        type: 'color'\n      }\n    ]\n  },\n  {\n    title: 'Text',\n    fields: [\n      {\n        name: 'textFont',\n        title: 'Typeface',\n        type: 'select',\n        options: allFonts\n      },\n      {\n        name: 'textSize',\n        title: 'Size',\n        type: 'select',\n        options: ['10px', '12px', '14px', '16px', '18px', '20px']\n      },\n      {\n        name: 'textWeight',\n        title: 'Weight',\n        type: 'select',\n        options: fontWeights\n      }\n    ]\n  },\n  {\n    title: 'Headlines',\n    fields: [\n      {\n        name: 'headlineFont',\n        title: 'Typeface',\n        type: 'select',\n        options: allFonts\n      },\n      {\n        name: 'headlineWeight',\n        title: 'Weight',\n        type: 'select',\n        options: fontWeights\n      },\n      {\n        name: 'headlineItalic',\n        title: 'Italic',\n        type: 'checkbox'\n      },\n      {\n        name: 'headlineUppercase',\n        title: 'Uppercase',\n        type: 'checkbox'\n      }\n    ]\n  }\n]\n\nconst SmartInput = (props) => props.type === 'select'\n  ? <SelectDropdown {...props} style={{ width: '8em' }} />\n  : <input {...props} value={props.value || (props.type === 'color' ? '#ffffff' : '')} />\n\nexport default ({ profile, setProfile }) => {\n  const handleChange = (fieldName, event) => {\n    const newValue = Object.prototype.hasOwnProperty.call(event.target, 'checked') ? event.target.checked : event.target.value\n    setProfile({\n      ...profile,\n      [fieldName]: newValue\n    })\n  }\n\n  return (\n    <DivLeft>\n      <Themes setProfile={setProfile} />\n      <h2>Details</h2>\n      {inputCategories.map(category => (\n        <div key={category.title}>\n          <h3>{category.title}</h3>\n          {category.fields.map(field => (\n            <p key={field.name}>\n              <label>\n                {field.title}:{' '}\n                <SmartInput type={field.type} options={field.options} value={profile[field.name]} onChange={event => handleChange(field.name, event)} />\n              </label>\n            </p>\n          ))}\n        </div>\n      ))}\n      <GoogleFontLink family={profile.textFont} />\n      <GoogleFontLink family={profile.headlineFont} />\n    </DivLeft>\n  )\n}\n\nconst DivLeft = styled.div`\n  text-align: left;\n  margin: auto;\n  width: 15em;\n\n  p {\n    margin: 0.4em 0;\n  }\n`\n","import themes from '../config/themes.json'\n\nconst trimCode = str => str.replace(/\\n {2}\\n/g, '\\n').replace(/\\n {2}\\n/g, '\\n').replace(/\\n\\n\\n/g, '\\n\\n')\n\nexport default (profile, rootClass = '.body') => {\n  const fixedProfile = Object.assign({}, themes[0].profile, profile)\n  const headerColor = fixedProfile.headerColor || fixedProfile.textColor\n  const sourceInfo = '/* ----- Generated by https://tomsoderlund.github.io/design-profile-generator/ ----- */'\n  return trimCode(`${sourceInfo}\n\n${rootClass} {\n  background-color: ${fixedProfile.backgroundColor};\n  color: ${fixedProfile.textColor};\n  font-family: '${fixedProfile.textFont}', sans-serif;\n  font-size: ${fixedProfile.textSize};\n  font-weight: ${fixedProfile.textWeight};\n}\n\nh1, h2, h3 {\n  line-height: 1.1em;\n  ${fixedProfile.headlineColor ? `color: ${fixedProfile.headlineColor};` : ''}\n  ${fixedProfile.headlineFont ? `font-family: '${fixedProfile.headlineFont}', sans-serif;` : ''}\n  ${fixedProfile.headlineWeight ? `font-weight: ${fixedProfile.headlineWeight};` : ''}\n  ${fixedProfile.headlineItalic ? 'font-style: italic;' : ''}\n  ${fixedProfile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n}\n\nnav {\n  background-color: ${headerColor};\n  color: ${fixedProfile.backgroundColor};\n  ${fixedProfile.headlineFont ? `font-family: '${fixedProfile.headlineFont}', sans-serif;` : ''}\n  ${fixedProfile.headlineWeight ? `font-weight: ${fixedProfile.headlineWeight};` : ''}\n  ${fixedProfile.headlineItalic ? 'font-style: italic;' : ''}\n  ${fixedProfile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n  padding: 0.8em;\n  text-align: center;\n}\n\nmain {\n  padding: 0.4em 1em;\n}\n\na {\n  color: ${fixedProfile.actionColor};\n  transition: all 0.2s;\n}\na:hover {\n  opacity: 0.6;\n}\na:active {\n  opacity: 1;\n}\n\n/* #NiceAndSimple: Button - http://codepen.io/tomsoderlund/pen/qqyzqp */\nbutton {\n  background-color: ${headerColor};\n  color: ${fixedProfile.backgroundColor};\n  position: relative;\n  border-radius: 0.2em;\n  border: none;\n  box-sizing: border-box;\n  display: inline-block;\n  cursor: pointer;\n  user-select: none;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: normal;\n  ${fixedProfile.headlineFont ? `font-family: '${fixedProfile.headlineFont}', sans-serif;` : ''}\n  ${fixedProfile.headlineWeight ? `font-weight: ${fixedProfile.headlineWeight};` : ''}\n  ${fixedProfile.headlineItalic ? 'font-style: italic;' : ''}\n  ${fixedProfile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n  text-align: center;\n  outline: none;\n  padding: 0.6em;\n  margin-right: 0.6em;\n  transition: all 0.2s;\n  min-width: 7em;\n}\nbutton:focus:not(:disabled) {\n  opacity: 0.8;\n}\nbutton:hover:not(:disabled) {\n  opacity: 0.8;\n  top: -0.1em;\n}\nbutton:hover:active {\n  top: 0.1em;\n  transition: all 0.05s;\n}\nbutton:disabled {\n  cursor: initial;\n  background-color: silver;\n}\n\nbutton.primary {\n  background-color: ${fixedProfile.actionColor};\n}\n\n/* #NiceAndSimple: Input and Dropdown Menu - http://codepen.io/tomsoderlund/pen/GNBbWz */\ninput,\ntextarea,\nselect {\n  background-color: white;\n  color: inherit;\n  outline: none;\n  resize: none;\n  box-sizing: border-box;\n  border-radius: 0.2em;\n  border: 1px solid lightgray;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 0.6em;\n  margin-right: 0.6em;\n  transition: all 0.2s;\n  min-width: 15em;\n}\ninput::placeholder,\ntextarea::placeholder {\n  color: lightgray;\n}\ninput:hover:not(:disabled):not(:focus),\n.input-like:hover:not(:disabled):not(:focus),\ntextarea:hover:not(:disabled):not(:focus),\nselect:hover:not(:disabled):not(:focus) {\n  border-color: silver;\n}\ninput:focus,\n.input-like:focus,\ntextarea:focus,\nselect:focus {\n  border-color: darkgray;\n}\ninput:read-only,\ntextarea:read-only {\n  color: darkgray;\n}\ninput:disabled,\n.input-like:disabled,\ntextarea:disabled,\nselect:disabled {\n  background-color: whitesmoke;\n}\n\n${fixedProfile.backgroundColor ? `.color-background-bg { background-color: ${fixedProfile.backgroundColor}; }\\n.color-background-fg { color: ${fixedProfile.backgroundColor}; }` : ''}\n${fixedProfile.textColor ? `.color-text-bg { background-color: ${fixedProfile.textColor}; }\\n.color-text-fg { color: ${fixedProfile.textColor}; }` : ''}\n${fixedProfile.headlineColor ? `.color-headline-bg { background-color: ${fixedProfile.headlineColor}; }\\n.color-headline-fg { color: ${fixedProfile.headlineColor}; }` : ''}\n${fixedProfile.actionColor ? `.color-action-primary-bg { background-color: ${fixedProfile.actionColor}; }\\n.color-action-primary-fg { color: ${fixedProfile.actionColor}; }` : ''}\n${headerColor ? `.color-action-secondary-bg { background-color: ${headerColor}; }\\n.color-action-secondary-fg { color: ${headerColor}; }` : ''}\n${headerColor ? `.color-header-bg { background-color: ${headerColor}; }` : ''}\n${fixedProfile.warningColor ? `.color-warning-bg { background-color: ${fixedProfile.warningColor}; }\\n.color-warning-fg { color: ${fixedProfile.warningColor}; }` : ''}\n${fixedProfile.informationColor ? `.color-information-bg { background-color: ${fixedProfile.informationColor}; }\\n.color-information-fg { color: ${fixedProfile.informationColor}; }` : ''}\n\n${sourceInfo}`)\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst HamburgerSVG = ({ color }) => (\n  <svg\n    version='1.1'\n    xmlns='http://www.w3.org/2000/svg'\n    xmlnsXlink='http://www.w3.org/1999/xlink'\n    x='0px'\n    y='0px'\n    width='1em'\n    height='100%'\n    viewBox='0 0 512 512'\n    fill={color}\n    xmlSpace='preserve'\n  >\n    <rect y='0' width='512' height='102.4' />\n    <rect y='204.8' width='512' height='102.4' />\n    <rect y='409.6' width='512' height='102.4' />\n  </svg>\n)\n\nexport default ({ profile }) => {\n  return (\n    <HamburgerWrapper>\n      <HamburgerSVG color={profile.backgroundColor} />\n    </HamburgerWrapper>\n  )\n}\n\nconst HamburgerWrapper = styled.div`\n  float: left;\n  position: absolute;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport generateCSS from '../lib/generateCSS'\nimport HamburgerMenu from './HamburgerMenu'\n\nexport default ({ profile }) => (\n  <PreviewBox {...profile} className='body'>\n    <nav>\n      <HamburgerMenu profile={profile} />\n      <span>Header</span>\n    </nav>\n    <main>\n      <h1>This is a headline</h1>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <a href='./'>Nam a nunc</a>. In ante metus, gravida vel, bibendum et, mollis vitae, ipsum.\n        {' '}\n        <span className='color-warning-bg'>This is a warning</span>, but <span className='color-information-bg'>this is just information</span>.\n      </p>\n      <p>\n        <input type='text' placeholder='Input' />\n      </p>\n      <p>\n        <button className='primary'>Primary</button>\n        <button>Secondary</button>\n      </p>\n    </main>\n  </PreviewBox>\n)\n\nconst PreviewBox = styled.div`\n  display: block;\n  width: 20em;\n  min-height: 10em;\n  margin: auto;\n  margin-top: 1em;\n  text-align: left;\n\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n\n  ${profile => generateCSS(profile, '&')}\n`\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\n\nimport generateCSS from '../lib/generateCSS'\n\nexport default ({ profile }) => {\n  const outputElement = useRef(null)\n  const doSelectAll = () => {\n    outputElement.current.select()\n  }\n\n  return (\n    <OutputTextBox\n      ref={outputElement}\n      onClick={doSelectAll}\n      readOnly\n      value={generateCSS(profile, 'body')}\n    />\n  )\n}\n\nconst OutputTextBox = styled.textarea`\n  display: block;\n  width: 20em;\n  min-height: 30em;\n  padding: 1em;\n  margin: auto;\n  margin-top: 1em;\n  border: none;\n  outline: none;\n  background-color: #555555;\n  color: #F5F5F5;\n  font-family: source-code-pro, Menlo, Monaco, Consolas, monospace;\n  font-size: 0.9em;\n\n  &:hover {\n    background-color: #666666;\n  }\n\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  TwitterShareButton,\n  TwitterIcon,\n  FacebookShareButton,\n  FacebookIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n  EmailShareButton,\n  EmailIcon\n} from 'react-share'\n\nconst SocialSharingSet = ({ link, title, body, styles }) => (\n  <>\n    <TwitterShareButton title={body} url={link} style={styles}><TwitterIcon round size={32} /></TwitterShareButton>\n    <FacebookShareButton url={link} style={styles}><FacebookIcon round size={32} /></FacebookShareButton>\n    <LinkedinShareButton url={link} style={styles}><LinkedinIcon round size={32} /></LinkedinShareButton>\n    <EmailShareButton subject={title} body={body} url={link} style={styles}><EmailIcon round size={32} /></EmailShareButton>\n  </>\n)\n\nexport default () => (\n  <SocialSharingBox>\n    Share:\n    <SocialSharingSet\n      link='https://tomsoderlund.github.io/design-profile-generator/'\n      title='Design Profile Generator'\n      body='Check out Design Profile Generator – Quickly generate a graphic design profile (as CSS):'\n      styles={{ cursor: 'pointer', display: 'inline-block', marginLeft: '0.3em' }}\n    />\n  </SocialSharingBox>\n)\n\nconst SocialSharingBox = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  color: white;\n  border-bottom-left-radius: 0.35em;\n  padding: 0.5em;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0,0,0, 0.3);\n  background: linear-gradient(135deg, rgba(0,0,0, 0.3) 0%, rgba(0,0,0, 0.3) 40%, white 50%, rgba(0,0,0, 0.3) 60%, rgba(0,0,0, 0.3) 100%);\n  background-size: 400% 100%;\n  background-position: 100% 50%;\n  animation: animation-shine 5s 0s infinite;\n\n  @keyframes animation-shine {\n    0% {\n      background-position: 100% 50%;\n    }\n    50% {\n      background-position: 0% 50%;\n    }\n    100% {\n      background-position: 100% 50%;\n    }\n  }\n`\n","import React, { useCallback } from 'react'\nimport { getSessionValue, setSessionValue } from 'simple-browser-session'\n\nimport packageJson from '../../package.json'\nimport './App.css'\n\nimport useProfile from '../lib/useProfile'\n\nimport Inputs from './Inputs'\nimport Preview from './Preview'\nimport OutputCSS from './OutputCSS'\nimport SocialSharing from './SocialSharing'\n\nfunction App () {\n  const savedProfile = getSessionValue('profile', {}, { useHash: false })\n  const [profile, setProfile] = useProfile(savedProfile)\n\n  const setProfileAndSession = useCallback(profile => {\n    setSessionValue('profile', profile, { updateQuery: true, useHash: false })\n    setProfile(profile)\n  }, [setProfile])\n\n  return (\n    <main className='App'>\n      <SocialSharing />\n      <h1>Design Profile Generator v{packageJson.version}</h1>\n      <div className='Panels'>\n        <Inputs profile={profile} setProfile={setProfileAndSession} />\n        <Preview profile={profile} />\n        <OutputCSS profile={profile} />\n      </div>\n      <p>\n        Made by <a target='_blank' rel='noopener noreferrer' href='https://twitter.com/tomsoderlund'>@tomsoderlund</a>. Get the <a target='_blank' rel='noopener noreferrer' href='https://github.com/tomsoderlund/design-profile-generator'>source code on GitHub</a>.\n      </p>\n    </main>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}