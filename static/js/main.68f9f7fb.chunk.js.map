{"version":3,"sources":["lib/useProfile.js","components/Input/SelectDropdown.js","components/GoogleFontLink.js","lib/randomizeProfile.js","components/Input/Themes.js","components/Input/Inputs.js","lib/generateCSS.js","components/Preview/HamburgerMenu.js","components/Input/HoverEditPanel.js","components/Preview/Preview.js","components/Output/OutputCSS.js","components/SocialSharing.js","components/App.js","serviceWorker.js","index.js"],"names":["profile","React","useState","themes","handleChange","onChange","event","newEvent","Object","assign","target","value","props","options","otherProps","optionTags","key","map","option","index","id","newOption","name","undefined","data-key","bind","family","rel","href","withProbability","prob","Math","random","getRandomFromArray","array","min","max","length","round","getRandomFromWeightedArray","weightedArray","randomNr","total","i","getRandomIndexFromWeightedArray","setProfile","onSelectTheme","useCallback","onRandomizeTheme","lightColors","namedColors","filter","color","hslValues","backgroundWeights","Array","fill","strongColors","backgroundColor","actionColor","textColor","headerColor","tinycolor","complement","toHexString","textFont","selectedFonts","textSize","textWeight","headlineFont","headlineWeight","randomizeProfile","ThemeButton","className","onClick","theme","title","description","GoogleFontLink","styled","button","headlineItalic","headlineUppercase","inputTypes","boolean","type","googleFonts","items","sort","a","b","category","item","replace","includes","label","inputType","warningInfoColorProps","fields","textProps","headlinesProps","SmartInput","propsWithoutInputType","inputTypeObj","SelectDropdown","style","width","InputFieldList","fieldName","newValue","prototype","hasOwnProperty","call","checked","field","SpanDiv","CategoriesAndInputs","categories","SpanH3","DivLeft","Themes","div","span","trimCode","str","rootClass","fixedProfile","sourceInfo","headlineColor","preview","warningColor","informationColor","HamburgerSVG","version","xmlns","xmlnsXlink","x","y","height","viewBox","xmlSpace","HamburgerWrapper","children","editChildren","isVisible","setIsVisible","HoverElement","onMouseEnter","EditPanel","onMouseLeave","PreviewBox","HoverEditPanel","HamburgerMenu","placeholder","generateCSS","outputElement","useRef","OutputTextBox","ref","current","select","readOnly","textarea","SocialSharingSet","link","body","styles","cursor","display","marginLeft","TwitterShareButton","url","TwitterIcon","size","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","subject","EmailIcon","SocialSharingBox","App","savedProfile","getSessionValue","useHash","useProfile","setProfileAndSession","setSessionValue","updateQuery","SocialSharing","packageJson","Inputs","Preview","OutputCSS","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68f9f7fb.chunk.js","sourcesContent":["import React from 'react'\n\nimport themes from '../config/themes.json'\n\nexport default (profile) => React.useState(profile || themes[0].profile)\n","import React from 'react'\n\nconst handleChange = (onChange, event) => {\n  const newEvent = Object.assign({}, event, { target: { value: (event.target.value === 'null') ? null : event.target.value } })\n  if (onChange) onChange(newEvent)\n}\n\nexport default (props) => {\n  const { options, onChange, ...otherProps } = props\n  const optionTags = [\n    <option key='null' value=''>(none)</option>,\n    ...props.options.map((option, index) => {\n      const value = (typeof (option) === 'object' && (option.value || option.id))\n        ? option.value || option.id\n        : option\n      const newOption = {\n        value,\n        name: (typeof (option) === 'object' && option.name) ? option.name : option,\n        key: (option.key !== undefined)\n          ? option.key\n          : (value !== undefined)\n            ? value\n            : index\n      }\n      return <option key={newOption.key} data-key={newOption.key} value={newOption.value}>{newOption.name}</option>\n    })\n  ]\n  return (\n    <select {...otherProps} onChange={handleChange.bind(undefined, props.onChange)}>\n      {optionTags}\n    </select>\n  )\n}\n","import React from 'react'\n\nexport default ({ family }) => <link rel='stylesheet' href={`https://fonts.googleapis.com/css?family=${family}:100,300,400,500,600,700,800,900,100italic,300italic,400italic,500italic,600italic,700italic,800italic,900italic&display=swap`} />\n","import tinycolor from 'tinycolor2'\nimport namedColors from './namedColors.json'\n\n// import googleFonts from '../config/googleFonts'\nimport selectedFonts from '../config/selectedFonts'\n\nconst getRandomNumber = (min, max) => Math.round(min + Math.random() * (max - min))\nconst withProbability = prob => Math.random() < prob\nconst getRandomFromArray = array => array[getRandomNumber(0, array.length - 1)]\nconst getRandomIndexFromWeightedArray = weightedArray => {\n  const randomNr = Math.random()\n  let total = 0\n  for (var i = 0; i < weightedArray.length; i++) {\n    total += weightedArray[i]\n    if (total > randomNr) return i\n  }\n}\nconst getRandomFromWeightedArray = (array, weightedArray) => array[getRandomIndexFromWeightedArray(weightedArray)]\n\nexport default () => {\n  const chanceOfWhiteBackground = 0.5\n  // const lightColors = namedColors.filter(color => tinycolor(color.hexValue).isLight())\n  const lightColors = namedColors.filter(color => color.hslValues[2] >= 0.9)\n  const backgroundWeights = Array(lightColors.length + 1).fill((1 - chanceOfWhiteBackground) / lightColors.length)\n  backgroundWeights[0] = chanceOfWhiteBackground\n\n  const strongColors = namedColors.filter(color => color.hslValues[1] >= 0.7 && color.hslValues[2] < 0.6)\n\n  const backgroundColor = getRandomFromWeightedArray([{ name: 'white' }, ...lightColors], backgroundWeights).name\n  const actionColor = getRandomFromArray(strongColors).name\n  const textColor = getRandomFromArray(['#555555', 'black'])\n  const headerColor = withProbability(0.5)\n    ? tinycolor(actionColor).complement().toHexString()\n    : undefined\n  // const informationColor = '#fffa46'\n  // const warningColor = '#fb1f52'\n  const textFont = getRandomFromArray(selectedFonts)\n  const textSize = getRandomFromArray(['12px', '14px', '16px'])\n  const textWeight = getRandomFromArray(['normal', '300'])\n  const headlineFont = withProbability(0.5)\n    ? getRandomFromArray(selectedFonts)\n    : undefined\n  const headlineWeight = getRandomFromArray(['normal', '600', 'bold'])\n\n  return {\n    backgroundColor,\n    actionColor,\n    textColor,\n    headerColor,\n    // informationColor,\n    // warningColor,\n    textFont,\n    textSize,\n    textWeight,\n    headlineFont,\n    headlineWeight\n  }\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport GoogleFontLink from '../GoogleFontLink'\nimport themes from '../../config/themes.json'\nimport randomizeProfile from '../../lib/randomizeProfile'\n\nexport default ({ setProfile }) => {\n  const onSelectTheme = useCallback(index => {\n    setProfile(themes[index].profile)\n  }, [setProfile])\n\n  const onRandomizeTheme = useCallback(() => {\n    setProfile(randomizeProfile())\n  }, [setProfile])\n\n  return (\n    <div>\n      <h2>Themes</h2>\n      <div>\n        <ThemeButton className='random' onClick={event => onRandomizeTheme()}>\n          Random\n        </ThemeButton>\n        {themes.map((theme, index) => (\n          <ThemeButton key={theme.name} title={theme.description} onClick={event => onSelectTheme(index)} {...theme.profile}>\n            {theme.name}\n            <GoogleFontLink family={theme.profile.headlineFont || theme.profile.textFont} />\n          </ThemeButton>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst ThemeButton = styled.button`\n  margin: 0 0.8em 0.8em 0;\n  padding: 0;\n  border-radius: 0.2em;\n  border: none;\n  display: inline-block;\n  cursor: pointer;\n  user-select: none;\n  outline: none;\n  font-size: 1em;\n  width: 5em;\n  height: 5em;\n  border: 2px solid transparent;\n  overflow: hidden;\n  background-color: ${profile => profile.actionColor};\n  color: ${profile => profile.backgroundColor};\n  font-family: ${profile => profile.headlineFont || profile.textFont};\n  font-weight: ${profile => profile.headlineWeight};\n  ${profile => profile.headlineItalic ? 'font-style: italic;' : ''}\n  ${profile => profile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n\n  &:hover {\n    border: 2px solid rgba(0,0,0, 0.4);\n  }\n\n  &.random {\n    background-image: linear-gradient(135deg, yellow 25%, lightgray 25%, lightgray 50%, yellow 50%, yellow 75%, lightgray 75%, lightgray 100%);\n    background-size: 28.28px 28.28px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport SelectDropdown from './SelectDropdown'\nimport GoogleFontLink from '../GoogleFontLink'\nimport Themes from './Themes'\nimport googleFonts from '../../config/googleFonts'\nimport selectedFonts from '../../config/selectedFonts'\n\nconst shortFontCategory = category => category.replace('-serif', '').replace('monospace', 'mono')\n\nconst allFonts = googleFonts.items.sort((a, b) => (a.category > b.category) ? 1 : ((b.category > a.category) ? -1 : 0)).map(item => ({\n  name: `${item.family} (${shortFontCategory(item.category)})${selectedFonts.includes(item.family) ? ' 🔵' : ''}`,\n  value: item.family\n}))\n\nconst fontSizes = ['10px', '12px', '14px', '16px', '18px', '20px']\n\nconst fontWeights = [\n  { name: 'Thin (100)', value: 100 },\n  { name: 'Light (300)', value: 300 },\n  { name: 'Regular (400)', value: 'normal' },\n  { name: 'Medium (500)', value: 500 },\n  { name: 'Semi-Bold (600)', value: 600 },\n  { name: 'Bold (700)', value: 'bold' },\n  { name: 'Extra-Bold (800)', value: 800 },\n  { name: 'Black (900)', value: 900 }\n]\n\nconst inputTypes = {\n  boolean: {\n    type: 'checkbox'\n  },\n  color: {\n    type: 'color'\n  },\n  'font-family': {\n    type: 'select',\n    options: allFonts\n  },\n  'font-weight': {\n    type: 'select',\n    options: fontWeights\n  },\n  'font-size': {\n    type: 'select',\n    options: fontSizes\n  }\n}\n\nexport const backgroundColor = {\n  name: 'backgroundColor',\n  label: 'Background',\n  inputType: 'color'\n}\n\nexport const actionColor = {\n  name: 'actionColor',\n  label: 'Action/Primary',\n  inputType: 'color'\n}\n\nexport const headerColor = {\n  name: 'headerColor',\n  label: 'Header/Secondary',\n  inputType: 'color'\n}\n\nexport const keyColorProps = {\n  title: 'Key Colors',\n  fields: [\n    backgroundColor,\n    actionColor,\n    headerColor\n  ]\n}\n\nexport const warningInfoColorProps = {\n  title: 'Warning/Info Colors',\n  fields: [\n    {\n      name: 'warningColor',\n      label: 'Warning',\n      inputType: 'color'\n    },\n    {\n      name: 'informationColor',\n      label: 'Information',\n      inputType: 'color'\n    }\n  ]\n}\n\nexport const textProps = {\n  title: 'Text',\n  fields: [\n    {\n      name: 'textFont',\n      label: 'Typeface',\n      inputType: 'font-family'\n    },\n    {\n      name: 'textSize',\n      label: 'Size',\n      inputType: 'font-size'\n    },\n    {\n      name: 'textWeight',\n      label: 'Weight',\n      inputType: 'font-weight'\n    },\n    {\n      name: 'textColor',\n      label: 'Color',\n      inputType: 'color'\n    }\n  ]\n}\n\nexport const headlinesProps = {\n  title: 'Headlines',\n  fields: [\n    {\n      name: 'headlineFont',\n      label: 'Typeface',\n      inputType: 'font-family'\n    },\n    {\n      name: 'headlineWeight',\n      label: 'Weight',\n      inputType: 'font-weight'\n    },\n    {\n      name: 'headlineItalic',\n      label: 'Italic',\n      inputType: 'boolean'\n    },\n    {\n      name: 'headlineColor',\n      label: 'Color',\n      inputType: 'color'\n    },\n    {\n      name: 'headlineUppercase',\n      label: 'Uppercase',\n      inputType: 'boolean'\n    }\n  ]\n}\n\n/*\nconst allInputCategories = [\n  keyColorProps,\n  warningInfoColorProps,\n  textProps,\n  headlinesProps\n]\n*/\n\nconst SmartInput = (props) => {\n  const { inputType, ...propsWithoutInputType } = props\n  const inputTypeObj = inputTypes[inputType]\n  return inputTypeObj.type === 'select'\n    ? <SelectDropdown {...inputTypeObj} {...propsWithoutInputType} style={{ width: '6rem' }} />\n    : <input type={inputTypeObj.type} {...propsWithoutInputType} value={props.value || (props.type === 'color' ? '#ffffff' : '')} />\n}\n\nexport const InputFieldList = ({ fields, profile, setProfile }) => {\n  const handleChange = (fieldName, event) => {\n    const newValue = Object.prototype.hasOwnProperty.call(event.target, 'checked')\n      ? event.target.checked\n      : event.target.value\n    setProfile({\n      ...profile,\n      [fieldName]: newValue\n    })\n  }\n\n  return (\n    fields.map(field => (\n      <SpanDiv key={field.name}>\n        <label>\n          {field.label}:{' '}\n          <SmartInput inputType={field.inputType} value={profile[field.name]} onChange={event => handleChange(field.name, event)} />\n        </label>\n      </SpanDiv>\n    ))\n  )\n}\n\nexport const CategoriesAndInputs = ({ categories, profile, setProfile }) => {\n  return (\n    categories.map(category => (\n      <SpanDiv key={category.title}>\n        <SpanH3>{category.title}</SpanH3>\n        {<InputFieldList fields={category.fields} profile={profile} setProfile={setProfile} />}\n      </SpanDiv>\n    ))\n  )\n}\n\nexport default ({ profile, setProfile }) => {\n  return (\n    <DivLeft>\n      <Themes setProfile={setProfile} />\n      {/*\n      <h2>Details</h2>\n      <CategoriesAndInputs categories={allInputCategories} profile={profile} setProfile={setProfile} />\n    */}\n      <GoogleFontLink family={profile.textFont} />\n      <GoogleFontLink family={profile.headlineFont} />\n    </DivLeft>\n  )\n}\n\nconst DivLeft = styled.div`\n  text-align: left;\n  margin: auto;\n  width: 15em;\n\n  p {\n    margin: 0.4em 0;\n  }\n`\n\nconst SpanDiv = styled.span`\n  display: block;\n  margin: 0.7em 0;\n`\n\nconst SpanH3 = styled.span`\n  font-weight: bold;\n`\n","import themes from '../config/themes.json'\n\nconst trimCode = str => str.replace(/\\n {2}\\n/g, '\\n').replace(/\\n {2}\\n/g, '\\n').replace(/\\n\\n\\n/g, '\\n\\n')\n\nexport default (profile, rootClass = '.body', options = {}) => {\n  const fixedProfile = Object.assign({}, themes[0].profile, profile)\n  const headerColor = fixedProfile.headerColor || fixedProfile.textColor\n  const sourceInfo = '/* ----- Generated by https://tomsoderlund.github.io/design-profile-generator/ ----- */'\n  return trimCode(`${sourceInfo}\n\n${rootClass} {\n  background-color: ${fixedProfile.backgroundColor};\n  color: ${fixedProfile.textColor};\n  font-family: '${fixedProfile.textFont}', sans-serif;\n  font-size: ${fixedProfile.textSize};\n  font-weight: ${fixedProfile.textWeight};\n}\n\nh1, h2, h3 {\n  line-height: 1.1em;\n  ${fixedProfile.headlineColor ? `color: ${fixedProfile.headlineColor};` : ''}\n  ${fixedProfile.headlineFont ? `font-family: '${fixedProfile.headlineFont}', sans-serif;` : ''}\n  ${fixedProfile.headlineWeight ? `font-weight: ${fixedProfile.headlineWeight};` : ''}\n  ${fixedProfile.headlineItalic ? 'font-style: italic;' : ''}\n  ${fixedProfile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n}\n\nnav {\n  background-color: ${headerColor};\n  color: ${fixedProfile.backgroundColor};\n  ${fixedProfile.headlineFont ? `font-family: '${fixedProfile.headlineFont}', sans-serif;` : ''}\n  ${fixedProfile.headlineWeight ? `font-weight: ${fixedProfile.headlineWeight};` : ''}\n  ${fixedProfile.headlineItalic ? 'font-style: italic;' : ''}\n  ${fixedProfile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n  padding: 0.8em;\n  text-align: center;\n}\n\nmain {\n  padding: 0.4em 1em;\n}\n\na {\n  color: ${fixedProfile.actionColor};\n  transition: all 0.2s;\n}\na:hover {\n  opacity: 0.6;\n}\na:active {\n  opacity: 1;\n}\n\n/* #NiceAndSimple: Button - http://codepen.io/tomsoderlund/pen/qqyzqp */\nbutton {\n  background-color: ${headerColor};\n  color: ${fixedProfile.backgroundColor};\n  position: relative;\n  border-radius: 0.2em;\n  border: none;\n  box-sizing: border-box;\n  display: inline-block;\n  cursor: pointer;\n  user-select: none;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: normal;\n  ${fixedProfile.headlineFont ? `font-family: '${fixedProfile.headlineFont}', sans-serif;` : ''}\n  ${fixedProfile.headlineWeight ? `font-weight: ${fixedProfile.headlineWeight};` : ''}\n  ${fixedProfile.headlineItalic ? 'font-style: italic;' : ''}\n  ${fixedProfile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n  text-align: center;\n  outline: none;\n  padding: 0.6em;\n  margin-right: 0.6em;\n  transition: all 0.2s;\n  min-width: 7em;\n}\nbutton:focus:not(:disabled) {\n  opacity: 0.8;\n}\nbutton:hover:not(:disabled) {\n  opacity: 0.8;\n  top: -0.1em;\n}\nbutton:hover:active {\n  top: 0.1em;\n  transition: all 0.05s;\n}\nbutton:disabled {\n  cursor: initial;\n  background-color: silver;\n}\n\nbutton.primary {\n  background-color: ${fixedProfile.actionColor};\n}\n\n/* #NiceAndSimple: Input and Dropdown Menu - http://codepen.io/tomsoderlund/pen/GNBbWz */\ninput${options.preview ? ':not([type=\\'color\\'])' : ''},\ntextarea,\nselect {\n  background-color: white;\n  color: inherit;\n  outline: none;\n  resize: none;\n  box-sizing: border-box;\n  border-radius: 0.2em;\n  border: 1px solid lightgray;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 0.6em;\n  margin-right: 0.6em;\n  transition: all 0.2s;\n  min-width: 15em;\n}\ninput::placeholder,\ntextarea::placeholder {\n  color: lightgray;\n}\ninput:hover:not(:disabled):not(:focus),\n.input-like:hover:not(:disabled):not(:focus),\ntextarea:hover:not(:disabled):not(:focus),\nselect:hover:not(:disabled):not(:focus) {\n  border-color: silver;\n}\ninput:focus,\n.input-like:focus,\ntextarea:focus,\nselect:focus {\n  border-color: darkgray;\n}\ninput:read-only,\ntextarea:read-only {\n  color: darkgray;\n}\ninput:disabled,\n.input-like:disabled,\ntextarea:disabled,\nselect:disabled {\n  background-color: whitesmoke;\n}\n\n${fixedProfile.backgroundColor ? `.color-background-bg { background-color: ${fixedProfile.backgroundColor}; }\\n.color-background-fg { color: ${fixedProfile.backgroundColor}; }` : ''}\n${fixedProfile.textColor ? `.color-text-bg { background-color: ${fixedProfile.textColor}; }\\n.color-text-fg { color: ${fixedProfile.textColor}; }` : ''}\n${fixedProfile.headlineColor ? `.color-headline-bg { background-color: ${fixedProfile.headlineColor}; }\\n.color-headline-fg { color: ${fixedProfile.headlineColor}; }` : ''}\n${fixedProfile.actionColor ? `.color-action-primary-bg { background-color: ${fixedProfile.actionColor}; }\\n.color-action-primary-fg { color: ${fixedProfile.actionColor}; }` : ''}\n${headerColor ? `.color-action-secondary-bg { background-color: ${headerColor}; }\\n.color-action-secondary-fg { color: ${headerColor}; }` : ''}\n${headerColor ? `.color-header-bg { background-color: ${headerColor}; }` : ''}\n${fixedProfile.warningColor ? `.color-warning-bg { background-color: ${fixedProfile.warningColor}; }\\n.color-warning-fg { color: ${fixedProfile.warningColor}; }` : ''}\n${fixedProfile.informationColor ? `.color-information-bg { background-color: ${fixedProfile.informationColor}; }\\n.color-information-fg { color: ${fixedProfile.informationColor}; }` : ''}\n\n${sourceInfo}`)\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst HamburgerSVG = ({ color }) => (\n  <svg\n    version='1.1'\n    xmlns='http://www.w3.org/2000/svg'\n    xmlnsXlink='http://www.w3.org/1999/xlink'\n    x='0px'\n    y='0px'\n    width='1em'\n    height='100%'\n    viewBox='0 0 512 512'\n    fill={color}\n    xmlSpace='preserve'\n  >\n    <rect y='0' width='512' height='102.4' />\n    <rect y='204.8' width='512' height='102.4' />\n    <rect y='409.6' width='512' height='102.4' />\n  </svg>\n)\n\nexport default ({ profile }) => {\n  return (\n    <HamburgerWrapper>\n      <HamburgerSVG color={profile.backgroundColor} />\n    </HamburgerWrapper>\n  )\n}\n\nconst HamburgerWrapper = styled.div`\n  float: left;\n  position: absolute;\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nexport default ({ children, editChildren }) => {\n  const [isVisible, setIsVisible] = useState(false)\n  return (\n    <HoverElement onMouseEnter={event => setIsVisible(true)}>\n      {children}\n      <EditPanel onMouseLeave={event => setIsVisible(false)} className={!isVisible && 'hidden'}>\n        {editChildren}\n      </EditPanel>\n    </HoverElement>\n  )\n}\n\nconst HoverElement = styled.span`\n`\n\nconst EditPanel = styled.span`\n  display: block;\n  background-color: #f0f0f0;\n  box-shadow: 0 2px 2px rgba(0,0,0, 0.2);\n  border-radius: 0.5em;\n  padding: 1em;\n  position: absolute;\n  z-index: 100;\n  width: 12em;\n  margin-top: -2.5em;\n  margin-left: 2.5em;\n  font-family: 'Source Sans Pro', sans-serif !important;\n  font-size: 0.9rem;\n\n  &.hidden {\n    // display: none;\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  h3 {\n    font-family: 'Source Sans Pro', sans-serif;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport generateCSS from '../../lib/generateCSS'\nimport HamburgerMenu from './HamburgerMenu'\nimport HoverEditPanel from '../Input/HoverEditPanel'\nimport { CategoriesAndInputs, InputFieldList, headlinesProps, textProps, warningInfoColorProps, headerColor, actionColor } from '../Input/Inputs'\n\nexport default ({ profile, setProfile }) => (\n  <PreviewBox {...profile} className='body'>\n    <HoverEditPanel editChildren={<InputFieldList fields={[headerColor]} profile={profile} setProfile={setProfile} />}>\n      <nav>\n        <HamburgerMenu profile={profile} />\n        <span>Header</span>\n      </nav>\n    </HoverEditPanel>\n    <main>\n      <HoverEditPanel editChildren={<CategoriesAndInputs categories={[headlinesProps]} profile={profile} setProfile={setProfile} />}>\n        <h1>This is a headline</h1>\n      </HoverEditPanel>\n      <p>\n        <HoverEditPanel editChildren={<CategoriesAndInputs categories={[textProps]} profile={profile} setProfile={setProfile} />}>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n        </HoverEditPanel>\n        {' '}\n        <a href='./'>Nam a nunc</a>.\n        In ante metus, gravida vel, bibendum et, mollis vitae, ipsum.\n        {' '}\n        <HoverEditPanel editChildren={<CategoriesAndInputs categories={[warningInfoColorProps]} profile={profile} setProfile={setProfile} />}>\n          <span className='color-warning-bg'>This is a warning</span>,\n          but <span className='color-information-bg'>this is just information</span>.\n        </HoverEditPanel>\n      </p>\n      <p>\n        <input type='text' placeholder='Input' />\n      </p>\n      <p>\n        <HoverEditPanel editChildren={<InputFieldList fields={[actionColor]} profile={profile} setProfile={setProfile} />}>\n          <button className='primary'>Primary</button>\n        </HoverEditPanel>\n        <HoverEditPanel editChildren={<InputFieldList fields={[headerColor]} profile={profile} setProfile={setProfile} />}>\n          <button>Secondary</button>\n        </HoverEditPanel>\n      </p>\n    </main>\n  </PreviewBox>\n)\n\nconst PreviewBox = styled.div`\n  display: block;\n  width: 20em;\n  min-height: 10em;\n  margin: auto;\n  margin-top: 1em;\n  text-align: left;\n  // transition: all 0.5s;\n\n  * {\n    // transition: all 0.5s;\n  }\n\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n\n  ${profile => generateCSS(profile, '&', { preview: true })}\n`\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\n\nimport generateCSS from '../../lib/generateCSS'\n\nexport default ({ profile }) => {\n  const outputElement = useRef(null)\n  const doSelectAll = () => {\n    outputElement.current.select()\n  }\n\n  return (\n    <OutputTextBox\n      ref={outputElement}\n      onClick={doSelectAll}\n      readOnly\n      value={generateCSS(profile, 'body')}\n    />\n  )\n}\n\nconst OutputTextBox = styled.textarea`\n  display: block;\n  width: 20em;\n  min-height: 30em;\n  padding: 1em;\n  margin: auto;\n  margin-top: 1em;\n  border: none;\n  outline: none;\n  background-color: #555555;\n  color: #F5F5F5;\n  font-family: source-code-pro, Menlo, Monaco, Consolas, monospace;\n  font-size: 0.9em;\n\n  &:hover {\n    background-color: #666666;\n  }\n\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  TwitterShareButton,\n  TwitterIcon,\n  FacebookShareButton,\n  FacebookIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n  EmailShareButton,\n  EmailIcon\n} from 'react-share'\n\nconst SocialSharingSet = ({ link, title, body, styles = { cursor: 'pointer', display: 'inline-block', marginLeft: '0.3em' } }) => (\n  <>\n    <TwitterShareButton title={body} url={link} style={styles}><TwitterIcon round size={32} /></TwitterShareButton>\n    <FacebookShareButton url={link} style={styles}><FacebookIcon round size={32} /></FacebookShareButton>\n    <LinkedinShareButton url={link} style={styles}><LinkedinIcon round size={32} /></LinkedinShareButton>\n    <EmailShareButton subject={title} body={body} url={link} style={styles}><EmailIcon round size={32} /></EmailShareButton>\n  </>\n)\n\nexport default () => (\n  <SocialSharingBox>\n    Share:\n    <SocialSharingSet\n      link='https://tomsoderlund.github.io/design-profile-generator/'\n      title='Design Profile Generator'\n      body='Check out Design Profile Generator – Quickly generate a graphic design profile (as CSS):'\n    />\n  </SocialSharingBox>\n)\n\nconst SocialSharingBox = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  color: white;\n  border-bottom-left-radius: 0.35em;\n  padding: 0.5em;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0,0,0, 0.3);\n  background: linear-gradient(135deg, rgba(0,0,0, 0.3) 0%, rgba(0,0,0, 0.3) 40%, white 50%, rgba(0,0,0, 0.3) 60%, rgba(0,0,0, 0.3) 100%);\n  background-size: 400% 100%;\n  background-position: 100% 50%;\n  animation: animation-shine 5s 0s infinite;\n\n  @keyframes animation-shine {\n    0% {\n      background-position: 100% 50%;\n    }\n    50% {\n      background-position: 0% 50%;\n    }\n    100% {\n      background-position: 100% 50%;\n    }\n  }\n`\n","import React, { useCallback } from 'react'\nimport { getSessionValue, setSessionValue } from 'simple-browser-session'\n\nimport packageJson from '../../package.json'\nimport './App.css'\n\nimport useProfile from '../lib/useProfile'\n\nimport Inputs from './Input/Inputs'\nimport Preview from './Preview/Preview'\nimport OutputCSS from './Output/OutputCSS'\nimport SocialSharing from './SocialSharing'\n\nfunction App () {\n  const savedProfile = getSessionValue('profile', {}, { useHash: false })\n  const [profile, setProfile] = useProfile(savedProfile)\n\n  const setProfileAndSession = useCallback(profile => {\n    setSessionValue('profile', profile, { updateQuery: true, useHash: false })\n    setProfile(profile)\n  }, [setProfile])\n\n  return (\n    <main className='App'>\n      <SocialSharing />\n      <h1>Design Profile Generator v{packageJson.version}</h1>\n      <p>Hover over different areas below to change style properties.</p>\n      <div className='Panels'>\n        <Inputs profile={profile} setProfile={setProfileAndSession} />\n        <Preview profile={profile} setProfile={setProfileAndSession} />\n        <OutputCSS profile={profile} />\n      </div>\n      <p>\n        Made by <a target='_blank' rel='noopener noreferrer' href='https://twitter.com/tomsoderlund'>@tomsoderlund</a>. Get the <a target='_blank' rel='noopener noreferrer' href='https://github.com/tomsoderlund/design-profile-generator'>source code on GitHub</a>.\n      </p>\n    </main>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}