{"version":3,"sources":["lib/simpleSession.js","components/SelectDropdown.js","components/GoogleFontLink.js","components/Themes.js","components/Inputs.js","lib/generateCSS.js","components/HamburgerMenu.js","components/Preview.js","components/OutputCSS.js","lib/useProfile.js","components/App.js","serviceWorker.js","index.js"],"names":["cookieName","queryObjectFromString","url","useHash","split","reduce","result","propValue","parseObject","decodeURIComponent","queryObjectToString","queryObject","Object","keys","key","undefined","length","setCookie","name","value","window","document","cookie","JSON","stringify","obj","includes","parse","getCurrentValues","allCookies","str","keyValue","query","location","href","assign","getSessionValue","property","defaultValue","options","setSessionValue","updateCookie","updateQuery","newPath","history","pushState","handleChange","onChange","event","newEvent","target","props","otherProps","optionTags","map","option","index","id","newOption","data-key","bind","family","rel","setProfile","onSelectTheme","useCallback","themes","profile","theme","ThemeButton","title","description","onClick","GoogleFontLink","headlineFont","textFont","styled","button","actionColor","backgroundColor","headlineWeight","headlineItalic","headlineUppercase","allFonts","googleFonts","items","sort","a","b","category","item","replace","selectedFonts","fontWeights","inputCategories","fields","type","SmartInput","SelectDropdown","style","width","fieldName","newValue","prototype","hasOwnProperty","call","checked","DivLeft","Themes","field","div","trimCode","rootClass","fixedProfile","headerColor","textColor","sourceInfo","textSize","textWeight","headlineColor","HamburgerSVG","color","version","xmlns","xmlnsXlink","x","y","height","viewBox","fill","xmlSpace","HamburgerWrapper","PreviewBox","className","HamburgerMenu","placeholder","generateCSS","outputElement","useRef","OutputTextBox","ref","current","select","readOnly","textarea","React","useState","App","savedProfile","useProfile","setProfileAndSession","Inputs","Preview","OutputCSS","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af4327c0.chunk.js","sourcesContent":["/**\n * SimpleSession module\n * @description Lib to get/set session values to cookie and/or URL query string.\n * @module SimpleSession\n * @author Tom Söderlund\n */\n\nconst DEFAULT_COOKIE_NAME = 'app'\nlet cookieName = DEFAULT_COOKIE_NAME\n\nconst queryObjectFromString = (url, useHash = false) => (url.split(useHash ? '#' : '?')[1] || '')\n  .split('&')\n  .reduce((result, propValue) => {\n    if (propValue !== '') result[propValue.split('=')[0]] = parseObject(decodeURIComponent(propValue.split('=')[1]))\n    return result\n  }, {})\n\nconst queryObjectToString = (queryObject, useHash = false) => Object.keys(queryObject).reduce((result, key) => (queryObject[key] === undefined) ? result : result + (result.length ? '&' : (useHash ? '#' : '?')) + key + '=' + queryObject[key], '')\n\nconst getCookies = () => window.document.cookie.split('; ').reduce((result, str) => {\n  const keyValue = str.split('=')\n  result[keyValue[0]] = keyValue[1]\n  return result\n}, {})\n\nconst setCookie = (name, value) => {\n  window.document.cookie = `${name}=${JSON.stringify(value)}`\n}\n\nconst parseObject = obj => (typeof (obj) === 'string' && (obj.includes('{') || obj.includes('['))) ? JSON.parse(obj) : obj\n\nconst getCurrentValues = (useHash) => {\n  const allCookies = getCookies()\n  const cookie = parseObject(allCookies[cookieName])\n  const query = queryObjectFromString(window.location.href, useHash)\n  return Object.assign({}, cookie, query)\n}\n\n// Public API\n\nexport const getSessionValue = function (property, defaultValue, options = {}) {\n  if (options.cookieName) cookieName = options.cookieName\n  const value = getCurrentValues(options.useHash)[property]\n  return value !== undefined ? value : defaultValue\n}\n\nexport const setSessionValue = function (property, value, options = {}) {\n  options.updateCookie = options.updateCookie || true\n  options.updateQuery = options.updateQuery || false\n  if (options.cookieName) cookieName = options.cookieName\n  if (options.updateCookie) {\n    setCookie(cookieName, { [property]: value })\n  }\n  if (options.updateQuery) {\n    const query = queryObjectFromString(window.location.href, options.useHash)\n    const newPath = queryObjectToString(Object.assign({}, query, { [property]: JSON.stringify(value) }), options.useHash)\n    window.history.pushState(null, null, newPath)\n  }\n}\n","import React from 'react'\n\nconst handleChange = (onChange, event) => {\n  const newEvent = Object.assign({}, event, { target: { value: (event.target.value === 'null') ? null : event.target.value } })\n  if (onChange) onChange(newEvent)\n}\n\nexport default (props) => {\n  const { options, onChange, ...otherProps } = props\n  const optionTags = [\n    <option key='null' value=''>(none)</option>,\n    ...props.options.map((option, index) => {\n      const value = (typeof (option) === 'object' && (option.value || option.id))\n        ? option.value || option.id\n        : option\n      const newOption = {\n        value,\n        name: (typeof (option) === 'object' && option.name) ? option.name : option,\n        key: (option.key !== undefined)\n          ? option.key\n          : (value !== undefined)\n            ? value\n            : index\n      }\n      return <option key={newOption.key} data-key={newOption.key} value={newOption.value}>{newOption.name}</option>\n    })\n  ]\n  return (\n    <select {...otherProps} onChange={handleChange.bind(undefined, props.onChange)}>\n      {optionTags}\n    </select>\n  )\n}\n","import React from 'react'\n\nexport default ({ family }) => <link rel='stylesheet' href={`https://fonts.googleapis.com/css?family=${family}:100,300,400,500,600,700,800,900,100italic,300italic,400italic,500italic,600italic,700italic,800italic,900italic&display=swap`} />\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport GoogleFontLink from './GoogleFontLink'\nimport themes from '../config/themes.json'\n\nexport default ({ setProfile }) => {\n  const onSelectTheme = useCallback(index => {\n    setProfile(themes[index].profile)\n  }, [setProfile])\n\n  return (\n    <div>\n      <h2>Themes</h2>\n      <div>\n        {themes.map((theme, index) => (\n          <ThemeButton key={theme.name} title={theme.description} onClick={event => onSelectTheme(index)} {...theme.profile}>\n            {theme.name}\n            <GoogleFontLink family={theme.profile.headlineFont || theme.profile.textFont} />\n          </ThemeButton>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst ThemeButton = styled.button`\n  margin: 0 0.8em 0.8em 0;\n  padding: 0;\n  border-radius: 0.2em;\n  border: none;\n  display: inline-block;\n  cursor: pointer;\n  user-select: none;\n  outline: none;\n  font-size: 1em;\n  width: 5em;\n  height: 5em;\n  border: 2px solid transparent;\n  overflow: hidden;\n  background-color: ${profile => profile.actionColor};\n  color: ${profile => profile.backgroundColor};\n  font-family: ${profile => profile.headlineFont || profile.textFont};\n  font-weight: ${profile => profile.headlineWeight};\n  ${profile => profile.headlineItalic ? 'font-style: italic;' : ''}\n  ${profile => profile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n\n  &:hover {\n    border: 2px solid rgba(0,0,0, 0.4);\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport SelectDropdown from './SelectDropdown'\nimport GoogleFontLink from './GoogleFontLink'\nimport Themes from './Themes'\nimport googleFonts from '../config/googleFonts'\nimport selectedFonts from '../config/selectedFonts'\n\nconst shortFontCategory = category => category.replace('-serif', '').replace('monospace', 'mono')\n\nconst allFonts = googleFonts.items.sort((a, b) => (a.category > b.category) ? 1 : ((b.category > a.category) ? -1 : 0)).map(item => ({\n  name: `${item.family} (${shortFontCategory(item.category)})${selectedFonts.includes(item.family) ? ' 🔵' : ''}`,\n  value: item.family\n}))\n\nconst fontWeights = [\n  { name: 'Thin (100)', value: 100 },\n  { name: 'Light (300)', value: 300 },\n  { name: 'Regular (400)', value: 'normal' },\n  { name: 'Medium (500)', value: 500 },\n  { name: 'Semi-Bold (600)', value: 600 },\n  { name: 'Bold (700)', value: 'bold' },\n  { name: 'Extra-Bold (800)', value: 800 },\n  { name: 'Black (900)', value: 900 }\n]\n\nconst inputCategories = [\n  {\n    title: 'Colors',\n    fields: [\n      {\n        name: 'backgroundColor',\n        title: 'Background',\n        type: 'color'\n      },\n      {\n        name: 'actionColor',\n        title: 'Action/Primary',\n        type: 'color'\n      },\n      {\n        name: 'headerColor',\n        title: 'Header/Secondary',\n        type: 'color'\n      },\n      {\n        name: 'textColor',\n        title: 'Text',\n        type: 'color'\n      },\n      {\n        name: 'headlineColor',\n        title: 'Headlines',\n        type: 'color'\n      }\n    ]\n  },\n  {\n    title: 'Text',\n    fields: [\n      {\n        name: 'textFont',\n        title: 'Typeface',\n        type: 'select',\n        options: allFonts\n      },\n      {\n        name: 'textSize',\n        title: 'Size',\n        type: 'select',\n        options: ['10px', '12px', '14px', '16px', '18px', '20px']\n      },\n      {\n        name: 'textWeight',\n        title: 'Weight',\n        type: 'select',\n        options: fontWeights\n      }\n    ]\n  },\n  {\n    title: 'Headlines',\n    fields: [\n      {\n        name: 'headlineFont',\n        title: 'Typeface',\n        type: 'select',\n        options: allFonts\n      },\n      {\n        name: 'headlineWeight',\n        title: 'Weight',\n        type: 'select',\n        options: fontWeights\n      },\n      {\n        name: 'headlineItalic',\n        title: 'Italic',\n        type: 'checkbox'\n      },\n      {\n        name: 'headlineUppercase',\n        title: 'Uppercase',\n        type: 'checkbox'\n      }\n    ]\n  }\n]\n\nconst SmartInput = (props) => props.type === 'select'\n  ? <SelectDropdown {...props} style={{ width: '8em' }} />\n  : <input {...props} />\n\nexport default ({ profile, setProfile }) => {\n  const handleChange = (fieldName, event) => {\n    const newValue = Object.prototype.hasOwnProperty.call(event.target, 'checked') ? event.target.checked : event.target.value\n    setProfile({\n      ...profile,\n      [fieldName]: newValue\n    })\n  }\n\n  return (\n    <DivLeft>\n      <Themes setProfile={setProfile} />\n      <h2>Details</h2>\n      {inputCategories.map(category => (\n        <div key={category.title}>\n          <h3>{category.title}</h3>\n          {category.fields.map(field => (\n            <p key={field.name}>\n              <label>\n                {field.title}:{' '}\n                <SmartInput type={field.type} options={field.options} value={profile[field.name]} onChange={event => handleChange(field.name, event)} />\n              </label>\n            </p>\n          ))}\n        </div>\n      ))}\n      <GoogleFontLink family={profile.textFont} />\n      <GoogleFontLink family={profile.headlineFont} />\n    </DivLeft>\n  )\n}\n\nconst DivLeft = styled.div`\n  text-align: left;\n  margin: auto;\n  width: 15em;\n\n  p {\n    margin: 0.4em 0;\n  }\n`\n","import themes from '../config/themes.json'\n\nconst trimCode = str => str.replace(/\\n {2}\\n/g, '\\n').replace(/\\n {2}\\n/g, '\\n')\n\nexport default (profile, rootClass = '.body') => {\n  const fixedProfile = Object.assign({}, themes[0].profile, profile)\n  const headerColor = fixedProfile.headerColor || fixedProfile.textColor\n  const sourceInfo = '/* ----- Generated by https://tomsoderlund.github.io/design-profile-generator/ ----- */'\n  return trimCode(`${sourceInfo}\n\n${rootClass} {\n  background-color: ${fixedProfile.backgroundColor};\n  color: ${fixedProfile.textColor};\n  font-family: '${fixedProfile.textFont}', sans-serif;\n  font-size: ${fixedProfile.textSize};\n  font-weight: ${fixedProfile.textWeight};\n}\n\nh1, h2, h3 {\n  line-height: 1.1em;\n  ${fixedProfile.headlineColor ? `color: ${fixedProfile.headlineColor};` : ''}\n  ${fixedProfile.headlineFont ? `font-family: '${fixedProfile.headlineFont}', sans-serif;` : ''}\n  ${fixedProfile.headlineWeight ? `font-weight: ${fixedProfile.headlineWeight};` : ''}\n  ${fixedProfile.headlineItalic ? 'font-style: italic;' : ''}\n  ${fixedProfile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n}\n\nnav {\n  background-color: ${headerColor};\n  color: ${fixedProfile.backgroundColor};\n  ${fixedProfile.headlineFont ? `font-family: '${fixedProfile.headlineFont}', sans-serif;` : ''}\n  ${fixedProfile.headlineWeight ? `font-weight: ${fixedProfile.headlineWeight};` : ''}\n  ${fixedProfile.headlineItalic ? 'font-style: italic;' : ''}\n  ${fixedProfile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n  padding: 0.8em;\n  text-align: center;\n}\n\nmain {\n  padding: 0.4em 1em;\n}\n\na {\n  color: ${fixedProfile.actionColor};\n}\na:hover {\n  opacity: 0.6;\n}\na:active {\n  opacity: 1;\n}\n\n/* #NiceAndSimple: Button - http://codepen.io/tomsoderlund/pen/qqyzqp */\nbutton {\n  background-color: ${headerColor};\n  color: ${fixedProfile.backgroundColor};\n  position: relative;\n  border-radius: 0.2em;\n  border: none;\n  box-sizing: border-box;\n  display: inline-block;\n  cursor: pointer;\n  user-select: none;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: normal;\n  ${fixedProfile.headlineFont ? `font-family: '${fixedProfile.headlineFont}', sans-serif;` : ''}\n  ${fixedProfile.headlineWeight ? `font-weight: ${fixedProfile.headlineWeight};` : ''}\n  ${fixedProfile.headlineItalic ? 'font-style: italic;' : ''}\n  ${fixedProfile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n  text-align: center;\n  outline: none;\n  padding: 0.6em;\n  margin-right: 0.6em;\n  transition: all 0.1s;\n  min-width: 7em;\n}\nbutton:focus:not(:disabled) {\n  opacity: 0.8;\n}\nbutton:hover:not(:disabled) {\n  opacity: 0.8;\n  top: -0.1em;\n}\nbutton:hover:active {\n  top: 0.1em;\n  transition: all 0.05s;\n}\nbutton:disabled {\n  cursor: initial;\n  background-color: silver;\n}\n\nbutton.primary {\n  background-color: ${fixedProfile.actionColor};\n}\n\n/* #NiceAndSimple: Input and Dropdown Menu - http://codepen.io/tomsoderlund/pen/GNBbWz */\ninput,\ntextarea,\nselect {\n  background-color: white;\n  color: inherit;\n  outline: none;\n  resize: none;\n  box-sizing: border-box;\n  border-radius: 0.2em;\n  border: 1px solid lightgray;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 0.6em;\n  margin-right: 0.6em;\n  min-width: 15em;\n}\ninput::placeholder,\ntextarea::placeholder {\n  color: lightgray;\n}\ninput:hover:not(:disabled):not(:focus),\n.input-like:hover:not(:disabled):not(:focus),\ntextarea:hover:not(:disabled):not(:focus),\nselect:hover:not(:disabled):not(:focus) {\n  border-color: silver;\n}\ninput:focus,\n.input-like:focus,\ntextarea:focus,\nselect:focus {\n  border-color: darkgray;\n}\ninput:read-only,\ntextarea:read-only {\n  color: darkgray;\n}\ninput:disabled,\n.input-like:disabled,\ntextarea:disabled,\nselect:disabled {\n  background-color: whitesmoke;\n}\n\n${fixedProfile.backgroundColor ? `.color-background-bg { background-color: ${fixedProfile.backgroundColor}; }\\n.color-background-fg { color: ${fixedProfile.backgroundColor}; }` : ''}\n${fixedProfile.textColor ? `.color-text-bg { background-color: ${fixedProfile.textColor}; }\\n.color-text-fg { color: ${fixedProfile.textColor}; }` : ''}\n${fixedProfile.headlineColor ? `.color-headline-bg { background-color: ${fixedProfile.headlineColor}; }\\n.color-headline-fg { color: ${fixedProfile.headlineColor}; }` : ''}\n${fixedProfile.actionColor ? `.color-action-primary-bg { background-color: ${fixedProfile.actionColor}; }\\n.color-action-primary-fg { color: ${fixedProfile.actionColor}; }` : ''}\n${headerColor ? `.color-action-secondary-bg { background-color: ${headerColor}; }\\n.color-action-secondary-fg { color: ${headerColor}; }` : ''}\n\n${sourceInfo}`)\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst HamburgerSVG = ({ color }) => (\n  <svg\n    version='1.1'\n    xmlns='http://www.w3.org/2000/svg'\n    xmlnsXlink='http://www.w3.org/1999/xlink'\n    x='0px'\n    y='0px'\n    width='1em'\n    height='100%'\n    viewBox='0 0 512 512'\n    fill={color}\n    xmlSpace='preserve'\n  >\n    <rect y='0' width='512' height='102.4' />\n    <rect y='204.8' width='512' height='102.4' />\n    <rect y='409.6' width='512' height='102.4' />\n  </svg>\n)\n\nexport default ({ profile }) => {\n  return (\n    <HamburgerWrapper>\n      <HamburgerSVG color={profile.backgroundColor} />\n    </HamburgerWrapper>\n  )\n}\n\nconst HamburgerWrapper = styled.div`\n  float: left;\n  position: absolute;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport generateCSS from '../lib/generateCSS'\nimport HamburgerMenu from './HamburgerMenu'\n\nexport default ({ profile }) => (\n  <PreviewBox {...profile} className='body'>\n    <nav>\n      <HamburgerMenu profile={profile} />\n      <span>Header</span>\n    </nav>\n    <main>\n      <h1>This is a headline</h1>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <a href='/' target='_blank'>Nam a nunc</a>. In ante metus, gravida vel, bibendum et, mollis vitae, ipsum. Sed leo nibh, pulvinar dignissim, pretium eget, mattis id, erat.</p>\n      <p>\n        <input type='text' placeholder='Input' />\n      </p>\n      <p>\n        <button className='primary'>Primary</button>\n        <button>Secondary</button>\n      </p>\n    </main>\n  </PreviewBox>\n)\n\nconst PreviewBox = styled.div`\n  display: block;\n  width: 20em;\n  min-height: 10em;\n  margin: auto;\n  margin-top: 1em;\n  text-align: left;\n\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n\n  ${profile => generateCSS(profile, '&')}\n`\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\n\nimport generateCSS from '../lib/generateCSS'\n\nexport default ({ profile }) => {\n  const outputElement = useRef(null)\n  const doSelectAll = () => {\n    outputElement.current.select()\n  }\n\n  return (\n    <OutputTextBox\n      ref={outputElement}\n      onClick={doSelectAll}\n      readOnly\n      value={generateCSS(profile, 'body')}\n    />\n  )\n}\n\nconst OutputTextBox = styled.textarea`\n  display: block;\n  width: 20em;\n  min-height: 30em;\n  padding: 1em;\n  margin: auto;\n  margin-top: 1em;\n  border: none;\n  outline: none;\n  background-color: #555555;\n  color: #F5F5F5;\n  font-family: source-code-pro, Menlo, Monaco, Consolas, monospace;\n  font-size: 0.9em;\n\n  &:hover {\n    background-color: #666666;\n  }\n\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n`\n","import React from 'react'\n\nimport themes from '../config/themes.json'\n\nexport default (profile) => React.useState(profile || themes[0].profile)\n","import React, { useCallback } from 'react'\nimport { getSessionValue, setSessionValue } from '../lib/simpleSession'\n\nimport './App.css'\n\nimport Inputs from './Inputs'\nimport Preview from './Preview'\nimport OutputCSS from './OutputCSS'\nimport useProfile from '../lib/useProfile'\n\nfunction App () {\n  const savedProfile = getSessionValue('profile', {}, { useHash: false })\n  const [profile, setProfile] = useProfile(savedProfile)\n\n  const setProfileAndSession = useCallback(profile => {\n    setSessionValue('profile', profile, { updateQuery: true, useHash: false })\n    setProfile(profile)\n  }, [setProfile])\n\n  return (\n    <main className='App'>\n      <h1>Design Profile Generator v2</h1>\n      <div className='Panels'>\n        <Inputs profile={profile} setProfile={setProfileAndSession} />\n        <Preview profile={profile} />\n        <OutputCSS profile={profile} />\n      </div>\n      <p>\n        Made by <a href='https://twitter.com/tomsoderlund'>@tomsoderlund</a>. Get the <a href='https://github.com/tomsoderlund/design-profile-generator'>source code on GitHub</a>.\n      </p>\n    </main>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}