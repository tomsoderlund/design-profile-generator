{"version":3,"sources":["components/SelectDropdown.js","components/GoogleFontLink.js","components/Themes.js","components/Inputs.js","lib/generateCSS.js","components/Preview.js","components/OutputCSS.js","lib/useProfile.js","components/App.js","serviceWorker.js","index.js"],"names":["handleChange","onChange","event","newEvent","Object","assign","target","value","props","options","otherProps","optionTags","key","map","option","index","id","newOption","name","undefined","data-key","bind","family","rel","href","themes","profile","backgroundColor","actionColor","headerColor","textColor","textFont","textSize","textWeight","headlineWeight","headlineFont","headlineColor","setProfile","onSelectTheme","useCallback","theme","ThemeButton","onClick","GoogleFontLink","styled","button","headlineItalic","headlineUppercase","allFonts","googleFonts","items","sort","a","b","category","item","replace","fontWeights","inputCategories","title","fields","type","SmartInput","SelectDropdown","style","width","fieldName","newValue","prototype","hasOwnProperty","call","checked","DivLeft","Themes","field","div","rootClass","PreviewBox","className","placeholder","generateCSS","OutputTextBox","readOnly","textarea","React","useState","App","useProfile","Inputs","Preview","OutputCSS","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f852f10b.chunk.js","sourcesContent":["import React from 'react'\n\nconst handleChange = (onChange, event) => {\n  const newEvent = Object.assign({}, event, { target: { value: (event.target.value === 'null') ? null : event.target.value } })\n  if (onChange) onChange(newEvent)\n}\n\nexport default (props) => {\n  const { options, onChange, ...otherProps } = props\n  const optionTags = [\n    <option key='null' value=''>(none)</option>,\n    ...props.options.map((option, index) => {\n      const value = (typeof (option) === 'object' && (option.value || option.id))\n        ? option.value || option.id\n        : option\n      const newOption = {\n        value,\n        name: (typeof (option) === 'object' && option.name) ? option.name : option,\n        key: (option.key !== undefined)\n          ? option.key\n          : (value !== undefined)\n            ? value\n            : index\n      }\n      return <option key={newOption.key} data-key={newOption.key} value={newOption.value}>{newOption.name}</option>\n    })\n  ]\n  return (\n    <select {...otherProps} onChange={handleChange.bind(undefined, props.onChange)}>\n      {optionTags}\n    </select>\n  )\n}\n","import React from 'react'\n\nexport default ({ family }) => <link rel='stylesheet' href={`https://fonts.googleapis.com/css?family=${family}:100,300,400,500,600,700,800,900,100italic,300italic,400italic,500italic,600italic,700italic,800italic,900italic&display=swap`} />\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nimport GoogleFontLink from './GoogleFontLink'\n\nexport const themes = [\n  {\n    name: 'Default',\n    profile: {\n      backgroundColor: '#FFFFFF',\n      actionColor: 'dodgerblue',\n      headerColor: '#555555',\n      textColor: '#555555',\n      textFont: 'Open Sans',\n      textSize: '14px',\n      textWeight: 'normal',\n      headlineWeight: 'bold'\n    }\n  },\n  {\n    name: 'Donuts',\n    profile: {\n      backgroundColor: '#f6e8ce',\n      actionColor: '#f11f30',\n      textColor: '#242321',\n      textFont: 'Nunito',\n      headlineFont: 'Bungee',\n      headlineColor: '#f11f30',\n      headlineWeight: 'normal'\n    }\n  },\n  {\n    name: 'Fb',\n    profile: {\n      backgroundColor: '#ffffff',\n      textColor: '#4b4f56',\n      actionColor: '#4267b2',\n      headerColor: '#4267b2',\n      textFont: 'system-ui'\n    }\n  },\n  {\n    name: 'Economy',\n    profile: {\n      backgroundColor: '#ffffff',\n      textColor: '#121212',\n      actionColor: '#e3120a',\n      headerColor: '#383e42',\n      textFont: 'Georgia',\n      headlineFont: 'Roboto',\n      headlineWeight: 'normal'\n    }\n  }\n]\n\nexport default ({ setProfile }) => {\n  const onSelectTheme = useCallback(index => {\n    setProfile(Object.assign({}, themes[0].profile, themes[index].profile))\n  }, [setProfile])\n\n  return <div>\n    <h2>Themes</h2>\n    <div>\n      {themes.map((theme, index) => <ThemeButton key={theme.name} onClick={event => onSelectTheme(index)} {...theme.profile}>\n        {theme.name}\n        <GoogleFontLink family={theme.profile.headlineFont || theme.profile.textFont} />\n      </ThemeButton>)}\n    </div>\n  </div>\n}\n\nconst ThemeButton = styled.button`\n  margin: 0 0.8em 0.8em 0;\n  border-radius: 0.2em;\n  border: none;\n  display: inline-block;\n  cursor: pointer;\n  user-select: none;\n  outline: none;\n  font-size: 1em;\n  min-width: 5em;\n  min-height: 5em;\n  border: 2px solid transparent;\n  background-color: ${profile => profile.actionColor};\n  color: ${profile => profile.backgroundColor};\n  font-family: ${profile => profile.headlineFont || profile.textFont};\n  font-weight: ${profile => profile.headlineWeight};\n  ${profile => profile.headlineItalic ? 'font-style: italic;' : ''}\n  ${profile => profile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n\n  &:hover {\n    border: 2px solid rgba(0,0,0, 0.4);\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport SelectDropdown from './SelectDropdown'\nimport GoogleFontLink from './GoogleFontLink'\nimport Themes from './Themes'\nimport googleFonts from '../config/googleFonts'\n\nconst shortFontCategory = category => category.replace('-serif', '').replace('monospace', 'mono')\n\nconst allFonts = googleFonts.items.sort((a, b) => (a.category > b.category) ? 1 : ((b.category > a.category) ? -1 : 0)).map(item => ({\n  name: `${item.family} (${shortFontCategory(item.category)})`,\n  value: item.family\n}))\n\nconst fontWeights = [\n  { name: 'Thin (100)', value: 100 },\n  { name: 'Light (300)', value: 300 },\n  { name: 'Regular (400)', value: 'normal' },\n  { name: 'Medium (500)', value: 500 },\n  { name: 'Semi-Bold (600)', value: 600 },\n  { name: 'Bold (700)', value: 'bold' },\n  { name: 'Extra-Bold (800)', value: 800 },\n  { name: 'Black (900)', value: 900 }\n]\n\nconst inputCategories = [\n  {\n    title: 'Colors',\n    fields: [\n      {\n        name: 'backgroundColor',\n        title: 'Background',\n        type: 'color'\n      },\n      {\n        name: 'actionColor',\n        title: 'Actions',\n        type: 'color'\n      },\n      {\n        name: 'headerColor',\n        title: 'Header',\n        type: 'color'\n      },\n      {\n        name: 'textColor',\n        title: 'Text',\n        type: 'color'\n      },\n      {\n        name: 'headlineColor',\n        title: 'Headlines',\n        type: 'color'\n      }\n    ]\n  },\n  {\n    title: 'Text',\n    fields: [\n      {\n        name: 'textFont',\n        title: 'Typeface',\n        type: 'select',\n        options: allFonts\n      },\n      {\n        name: 'textSize',\n        title: 'Size',\n        type: 'select',\n        options: ['10px', '12px', '14px', '16px', '18px', '20px']\n      },\n      {\n        name: 'textWeight',\n        title: 'Weight',\n        type: 'select',\n        options: fontWeights\n      }\n    ]\n  },\n  {\n    title: 'Headlines',\n    fields: [\n      {\n        name: 'headlineFont',\n        title: 'Typeface',\n        type: 'select',\n        options: allFonts\n      },\n      {\n        name: 'headlineWeight',\n        title: 'Weight',\n        type: 'select',\n        options: fontWeights\n      },\n      {\n        name: 'headlineItalic',\n        title: 'Italic',\n        type: 'checkbox'\n      },\n      {\n        name: 'headlineUppercase',\n        title: 'Uppercase',\n        type: 'checkbox'\n      }\n    ]\n  }\n]\n\nconst SmartInput = (props) => props.type === 'select'\n  ? <SelectDropdown {...props} style={{ width: '8em' }} />\n  : <input {...props} />\n\nexport default ({ profile, setProfile }) => {\n  const handleChange = (fieldName, event) => {\n    const newValue = Object.prototype.hasOwnProperty.call(event.target, 'checked') ? event.target.checked : event.target.value\n    setProfile({\n      ...profile,\n      [fieldName]: newValue\n    })\n  }\n\n  return (\n    <DivLeft>\n      <Themes setProfile={setProfile} />\n      <h2>Details</h2>\n      {inputCategories.map(category => (\n        <div key={category.title}>\n          <h3>{category.title}</h3>\n          {category.fields.map(field => (\n            <p key={field.name}>\n              <label>\n                {field.title}:{' '}\n                <SmartInput type={field.type} options={field.options} value={profile[field.name]} onChange={event => handleChange(field.name, event)} />\n              </label>\n            </p>\n          ))}\n        </div>\n      ))}\n      <GoogleFontLink family={profile.textFont} />\n      <GoogleFontLink family={profile.headlineFont} />\n    </DivLeft>\n  )\n}\n\nconst DivLeft = styled.div`\n  text-align: left;\n  margin: auto;\n  width: 15em;\n\n  p {\n    margin: 0.4em 0;\n  }\n`\n","export default (profile, rootClass = '.body') => {\n  return `${rootClass} {\n  background-color: ${profile.backgroundColor};\n  color: ${profile.textColor};\n  font-family: '${profile.textFont}', sans-serif;\n  font-size: ${profile.textSize};\n  font-weight: ${profile.textWeight};\n}\n\nh1, h2, h3 {\n  line-height: 1.1em;\n  ${profile.headlineColor ? `color: ${profile.headlineColor};` : ''}\n  ${profile.headlineFont ? `font-family: '${profile.headlineFont}', sans-serif;` : ''}\n  ${profile.headlineWeight ? `font-weight: ${profile.headlineWeight};` : ''}\n  ${profile.headlineItalic ? 'font-style: italic;' : ''}\n  ${profile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n}\n\nnav {\n  background-color: ${profile.headerColor || profile.textColor};\n  color: ${profile.backgroundColor};\n  ${profile.headlineFont ? `font-family: '${profile.headlineFont}', sans-serif;` : ''}\n  ${profile.headlineWeight ? `font-weight: ${profile.headlineWeight};` : ''}\n  ${profile.headlineItalic ? 'font-style: italic;' : ''}\n  ${profile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n  padding: 0.8em;\n  text-align: center;\n}\n\nmain {\n  padding: 1em;\n}\n\na {\n  color: ${profile.actionColor};\n}\n\n/* #NiceAndSimple: Button - http://codepen.io/tomsoderlund/pen/qqyzqp */\nbutton {\n  background-color: ${profile.headerColor || profile.textColor};\n  color: ${profile.backgroundColor};\n  position: relative;\n  border-radius: 0.2em;\n  border: none;\n  box-sizing: border-box;\n  display: inline-block;\n  cursor: pointer;\n  user-select: none;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: normal;\n  ${profile.headlineFont ? `font-family: '${profile.headlineFont}', sans-serif;` : ''}\n  ${profile.headlineWeight ? `font-weight: ${profile.headlineWeight};` : ''}\n  ${profile.headlineItalic ? 'font-style: italic;' : ''}\n  ${profile.headlineUppercase ? 'text-transform: uppercase;' : ''}\n  text-align: center;\n  outline: none;\n  padding: 0.6em;\n  margin-right: 0.6em;\n  transition: all 0.1s;\n}\nbutton:focus:not(:disabled) {\n  opacity: 0.8;\n}\nbutton:hover:not(:disabled) {\n  opacity: 0.8;\n  top: -0.1em;\n}\nbutton:hover:active {\n  top: 0.1em;\n  transition: all 0.05s;\n}\nbutton:disabled {\n  cursor: initial;\n  background-color: silver;\n}\n\nbutton.primary {\n  background-color: ${profile.actionColor};\n}\n\n/* #NiceAndSimple: Input and Dropdown Menu - http://codepen.io/tomsoderlund/pen/GNBbWz */\ninput,\ntextarea,\nselect {\n  background-color: white;\n  color: inherit;\n  outline: none;\n  resize: none;\n  box-sizing: border-box;\n  border-radius: 0.2em;\n  border: 1px solid lightgray;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 0.6em;\n  margin-right: 0.6em;\n}\ninput::placeholder,\ntextarea::placeholder {\n  color: lightgray;\n}\ninput:hover:not(:disabled):not(:focus),\n.input-like:hover:not(:disabled):not(:focus),\ntextarea:hover:not(:disabled):not(:focus),\nselect:hover:not(:disabled):not(:focus) {\n  border-color: silver;\n}\ninput:focus,\n.input-like:focus,\ntextarea:focus,\nselect:focus {\n  border-color: darkgray;\n}\ninput:read-only,\ntextarea:read-only {\n  color: darkgray;\n}\ninput:disabled,\n.input-like:disabled,\ntextarea:disabled,\nselect:disabled {\n  background-color: whitesmoke;\n}\n`.replace(/\\n {2}\\n/g, '\\n').replace(/\\n {2}\\n/g, '\\n')\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport generateCSS from '../lib/generateCSS'\n\nexport default ({ profile }) => (\n  <PreviewBox {...profile} className='body'>\n    <nav>Header</nav>\n    <main>\n      <h1>This is a headline</h1>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <a href='#'>Nam a nunc</a>. In ante metus, gravida vel, bibendum et, mollis vitae, ipsum. Sed leo nibh, pulvinar dignissim, pretium eget, mattis id, erat.</p>\n      <p>\n        <input type='text' placeholder='Input' />\n      </p>\n      <p>\n        <button className='primary'>Primary</button>\n        <button>Secondary</button>\n      </p>\n    </main>\n  </PreviewBox>\n)\n\nconst PreviewBox = styled.div`\n  display: block;\n  width: 20em;\n  min-height: 10em;\n  margin: auto;\n  margin-top: 1em;\n  text-align: left;\n\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n\n  ${profile => generateCSS(profile, '&')}\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport generateCSS from '../lib/generateCSS'\n\nexport default ({ profile }) => (\n  <OutputTextBox\n    readOnly\n    value={generateCSS(profile, 'body')}\n  />\n)\n\nconst OutputTextBox = styled.textarea`\n  display: block;\n  width: 20em;\n  min-height: 30em;\n  padding: 1em;\n  margin: auto;\n  margin-top: 1em;\n  border: none;\n  background-color: #555555;\n  color: #F5F5F5;\n  font-family: source-code-pro, Menlo, Monaco, Consolas, monospace;\n  font-size: 0.9em;\n\n  &:hover {\n    background-color: #666666;\n  }\n\n  @media only screen and (max-width: 480px) {\n    width: 90%;\n  }\n`\n","import React from 'react'\n\nimport { themes } from '../components/Themes'\n\nexport default () => React.useState(themes[0].profile)\n","import React from 'react'\nimport './App.css'\n\nimport Inputs from './Inputs'\nimport Preview from './Preview'\nimport OutputCSS from './OutputCSS'\nimport useProfile from '../lib/useProfile'\n\nfunction App () {\n  const [profile, setProfile] = useProfile()\n  return (\n    <main className='App'>\n      <h1>Design Profile Generator v2</h1>\n      <div className='Panels'>\n        <Inputs profile={profile} setProfile={setProfile} />\n        <Preview profile={profile} />\n        <OutputCSS profile={profile} />\n      </div>\n      <p>\n        Made by <a href='https://twitter.com/tomsoderlund'>@tomsoderlund</a>. Get the <a href='https://github.com/tomsoderlund/design-profile-generator'>source code on GitHub</a>.\n      </p>\n    </main>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}